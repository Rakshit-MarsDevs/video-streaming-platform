version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: videostream-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: video-streaming-platform
    ports:
      - "27017:27017"
    volumes:
      - mongodb_dev_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - videostream-dev-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: videostream-redis-dev
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - videostream-dev-network

  # Backend API (Development mode with hot reload)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: videostream-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/video-streaming-platform?authSource=admin
      REDIS_URL: redis://:redis123@redis:6379
      JWT_SECRET: dev-jwt-secret-key-2024
      JWT_EXPIRE: 7d
    ports:
      - "5001:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - video_dev_uploads:/app/uploads
    depends_on:
      - mongodb
      - redis
    networks:
      - videostream-dev-network

  # Frontend React App (Development mode with hot reload)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: videostream-frontend-dev
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:5001/api
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - videostream-dev-network
    stdin_open: true
    tty: true

volumes:
  mongodb_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  video_dev_uploads:
    driver: local

networks:
  videostream-dev-network:
    driver: bridge
